
version: '3.8'

services:
  quickpizza:
    # The QUICKPIZZA_IMAGE env. variable enables the use of a locally built image,
    # created with `docker build -t image_name .`
    image: ${QUICKPIZZA_IMAGE:-ghcr.io/grafana/quickpizza-local:latest}
    ports:
      - "3333:3333"
    environment:
      QUICKPIZZA_OTLP_ENDPOINT: http://agent:4318
      QUICKPIZZA_TRUST_CLIENT_TRACEID: 1

  loki:
    image: grafana/loki:2.8.3
    ports:
      - "3100:3100"

  prometheus:
    image: prom/prometheus:v2.47.0
    command:
      - --web.enable-remote-write-receiver
      - --enable-feature=native-histograms
      - --config.file=/etc/prometheus/prometheus.yml
      - --enable-feature=exemplar-storage
    ports:
      - "9090:9090"

  pyroscope:
    image: grafana/pyroscope:latest
    ports:
      - "4040:4040"

  tempo:
    image: grafana/tempo:2.1.0
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml
    ports:
      - "3200:3200"
      - "4317:4317"
      - "4318:4318"

  grafana:
    image: grafana/grafana:10.1.2
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ./grafana:/etc/grafana/provisioning/

  agent:
    image: grafana/agent:latest
    volumes:
      - "./contrib/agent-local.river:/grafana-agent.river:Z"
      - "${DOCKER_SOCKET:-/var/run/docker.sock}:/var/run/docker.sock"
    command: ["run", "/grafana-agent.river", "--server.http.listen-addr=0.0.0.0:12345"]
    ports:
      - "12345:12345"
    environment:
      AGENT_MODE: flow
      QUICKPIZZA_HOST: quickpizza:3333
      METRICS_ENDPOINT: http://prometheus:9090/api/v1/write
      TRACES_ENDPOINT: http://tempo:4317
      LOGS_ENDPOINT: http://loki:3100/loki/api/v1/push
      PROFILES_ENDPOINT: http://pyroscope:4040
    depends_on:
      - prometheus
      - quickpizza
      - tempo
